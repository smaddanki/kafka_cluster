apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  namespace: default
  labels:
    app: kafka-app
spec:
  ports:
    - name: internal
      port: 29092
      targetPort: 29092
    - name: external
      port: 9092
      targetPort: 9092
    - name: controller
      port: 9093
      targetPort: 9093
  selector:
    app: kafka-app
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka-app
spec:
  serviceName: kafka-svc
  replicas: 3
  selector:
    matchLabels:
      app: kafka-app
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      containers:
        - name: kafka-container
          image: bitnami/kafka:3.5.1
          command: ["/scripts/init.sh"]
          ports:
            - name: internal
              containerPort: 29092
            - name: controller
              containerPort: 9093
            - name: external
              containerPort: 9092             
          env:
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"        
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"             
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka-svc.default.svc.cluster.local:9093,1@kafka-1.kafka-svc.default.svc.cluster.local:9093,2@kafka-2.kafka-svc.default.svc.cluster.local:9093"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"                
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: "oh-sxaDRTcyAr6pFRbXyzA"           
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              value: '3'
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT"
            - name: KAFKA_CFG_LISTENERS
              value: "INTERNAL://:29092,CONTROLLER://:9093,EXTERNAL://:9092"
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
            - name: init-script
              mountPath: /scripts
      volumes:
        - name: init-script
          configMap:
            name: kafka-init
            defaultMode: 0755
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: kafka-app             
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: kafka-app